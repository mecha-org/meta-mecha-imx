From 7a9a618e64ce1087521b530c94529db7f706689a Mon Sep 17 00:00:00 2001
From: Hardevsinh Palaniya <hardevsinh.palaniya@siliconsignals.io>
Date: Sat, 26 Aug 2023 20:53:44 +0530
Subject: [PATCH] Add fuel-guage(bq27441) calibration

WIP progress : able to update BQ27XXX_DM_DESIGN_CAPACITY, BQ27XXX_DM_DESIGN_ENERGY
and BQ27XXX_DM_TERMINATE_VOLTAGE. Need to add more parameter.

Signed-off-by: Hardevsinh Palaniya <hardevsinh.palaniya@siliconsignals.io>

diff --git a/arch/arm64/boot/dts/freescale/mecha-mc-ci8mm.dts b/arch/arm64/boot/dts/freescale/mecha-mc-ci8mm.dts
index 243044e7223e..97094f4caedd 100644
--- a/arch/arm64/boot/dts/freescale/mecha-mc-ci8mm.dts
+++ b/arch/arm64/boot/dts/freescale/mecha-mc-ci8mm.dts
@@ -165,29 +165,35 @@ bq27440: fuel-gauge@55 {
 		monitored-battery = <&bat>;
 		bat: battery {
 			compatible = "simple-battery";
-			over-voltage-threshold-microvolt = <4500000>;
-			re-charge-voltage-microvolt = <250000>;
+			device-chemistry = "lithium-ion-polymer";
+
+			energy-full-design-microwatt-hours = <3000000>;
+			charge-full-design-microamp-hours = <3000000>;
 			voltage-min-design-microvolt = <3200000>;
 			voltage-max-design-microvolt = <4200000>;
-			energy-full-design-microwatt-hours = <5290000>;
-			charge-full-design-microamp-hours = <1430000>;
-			precharge-current-microamp = <256000>;
-			precharge-upper-limit-microvolt = <2500000>;
-			charge-term-current-microamp = <128000>;
-			constant-charge-current-max-microamp = <900000>;
-			constant-charge-voltage-max-microvolt = <4200000>;
-			factory-internal-resistance-micro-ohms = <250000>;
-			ocv-capacity-celsius = <(-10) 0 10>;
+//			trickle-charge-current-microamp = <1500000>;
+//			precharge-current-microamp = <256000>;
+//			precharge-upper-limit-microvolt = <3000000>;
+//			charge-term-current-microamp = <128000>;
+//			re-charge-voltage-microvolt = <3000000>;
+			over-voltage-threshold-microvolt = <4500000>;
+//			constant-charge-current-max-microamp = <2000000>;
+//			constant-charge-voltage-max-microvolt = <4300000>;
+//			factory-internal-resistance-micro-ohms = <1000>;
+			
+//			ambient-celsius = <(-5) 50>;
+//			alert-celsius = <0 40>;
+//			operating-range-celsius = <(-30) 50>;
+
+//			ocv-capacity-celsius = <(-10) 0 10>;
 			/* table for -10 degree Celsius */
-			ocv-capacity-table-0 = <4185000 100>, <4113000 95>, <4066000 90>;
+//			ocv-capacity-table-0 = <4185000 100>, <4113000 95>, <4066000 90>;
 			/* table for 0 degree Celsius */
-			ocv-capacity-table-1 = <4200000 100>, <4185000 95>, <4113000 90>;
+//			ocv-capacity-table-1 = <4200000 100>, <4185000 95>, <4113000 90>;
 			/* table for 10 degree Celsius */
-			ocv-capacity-table-2 = <4250000 100>, <4200000 95>, <4185000 90>;
-			resistance-temp-table = <20 100>, <10 90>, <0 80>, <(-10) 60>;
-			operating-range-celsius = <(-30) 50>;
-			ambient-celsius = <(-5) 50>;
-			alert-celsius = <0 40>;
+//			ocv-capacity-table-2 = <4250000 100>, <4200000 95>, <4185000 90>;
+//			resistance-temp-table = <20 100>, <10 90>, <0 80>, <(-10) 60>;
+
 		};
 	};
 
diff --git a/drivers/power/supply/bq27xxx_battery.c b/drivers/power/supply/bq27xxx_battery.c
index 7e5e24b585d8..0b3e2a23347c 100644
--- a/drivers/power/supply/bq27xxx_battery.c
+++ b/drivers/power/supply/bq27xxx_battery.c
@@ -934,7 +934,7 @@ static struct bq27xxx_dm_reg bq27426_dm_regs[] = {
 	[BQ27XXX_DM_TERMINATE_VOLTAGE] = { 82, 10, 2, 2500,  3700 },
 };
 
-#if 0 /* not yet tested */
+#if 1 /* not yet tested */
 #define bq27441_dm_regs bq27421_dm_regs
 #else
 #define bq27441_dm_regs 0
@@ -1477,15 +1477,20 @@ static void bq27xxx_battery_settings(struct bq27xxx_device_info *di)
 	struct power_supply_battery_info info = {};
 	unsigned int min, max;
 
-	if (power_supply_get_battery_info(di->bat, &info) < 0)
+	printk("BAT_DEBUG : %s, %s, %d : Enter",__FILE__, __func__, __LINE__);
+	if (power_supply_get_battery_info(di->bat, &info) < 0) {
+		printk("BAT_DEBUG : %s, %s, %d : Error in get_bat_info",__FILE__, __func__, __LINE__);
 		return;
+	}
 
 	if (!di->dm_regs) {
+		printk("BAT_DEBUG : %s, %s, %d : data memory update error",__FILE__, __func__, __LINE__);
 		dev_warn(di->dev, "data memory update not supported for chip\n");
 		return;
 	}
 
 	if (info.energy_full_design_uwh != info.charge_full_design_uah) {
+		printk("BAT_DEBUG : %s, %s, %d : error",__FILE__, __func__, __LINE__);
 		if (info.energy_full_design_uwh == -EINVAL)
 			dev_warn(di->dev, "missing battery:energy-full-design-microwatt-hours\n");
 		else if (info.charge_full_design_uah == -EINVAL)
@@ -1495,6 +1500,7 @@ static void bq27xxx_battery_settings(struct bq27xxx_device_info *di)
 	/* assume min == 0 */
 	max = di->dm_regs[BQ27XXX_DM_DESIGN_ENERGY].max;
 	if (info.energy_full_design_uwh > max * 1000) {
+		printk("BAT_DEBUG : %s, %s, %d : error",__FILE__, __func__, __LINE__);
 		dev_err(di->dev, "invalid battery:energy-full-design-microwatt-hours %d\n",
 			info.energy_full_design_uwh);
 		info.energy_full_design_uwh = -EINVAL;
@@ -1503,6 +1509,7 @@ static void bq27xxx_battery_settings(struct bq27xxx_device_info *di)
 	/* assume min == 0 */
 	max = di->dm_regs[BQ27XXX_DM_DESIGN_CAPACITY].max;
 	if (info.charge_full_design_uah > max * 1000) {
+		printk("BAT_DEBUG : %s, %s, %d : error",__FILE__, __func__, __LINE__);
 		dev_err(di->dev, "invalid battery:charge-full-design-microamp-hours %d\n",
 			info.charge_full_design_uah);
 		info.charge_full_design_uah = -EINVAL;
@@ -1513,6 +1520,7 @@ static void bq27xxx_battery_settings(struct bq27xxx_device_info *di)
 	if ((info.voltage_min_design_uv < min * 1000 ||
 	     info.voltage_min_design_uv > max * 1000) &&
 	     info.voltage_min_design_uv != -EINVAL) {
+		printk("BAT_DEBUG : %s, %s, %d : error",__FILE__, __func__, __LINE__);
 		dev_err(di->dev, "invalid battery:voltage-min-design-microvolt %d\n",
 			info.voltage_min_design_uv);
 		info.voltage_min_design_uv = -EINVAL;
@@ -1522,6 +1530,7 @@ static void bq27xxx_battery_settings(struct bq27xxx_device_info *di)
 	     info.charge_full_design_uah != -EINVAL) ||
 	     info.voltage_min_design_uv  != -EINVAL)
 		bq27xxx_battery_set_config(di, &info);
+	printk("BAT_DEBUG : %s, %s, %d : success",__FILE__, __func__, __LINE__);
 }
 
 /*
diff --git a/drivers/power/supply/power_supply_core.c b/drivers/power/supply/power_supply_core.c
index a6e9afa5a1cf..13a98cc7512a 100644
--- a/drivers/power/supply/power_supply_core.c
+++ b/drivers/power/supply/power_supply_core.c
@@ -608,12 +608,12 @@ int power_supply_get_battery_info(struct power_supply *psy,
 	err = of_property_read_string(battery_np, "compatible", &value);
 	if (err)
 		goto out_put_node;
-
+/*
 	if (strcmp("simple-battery", value)) {
 		err = -ENODEV;
 		goto out_put_node;
 	}
-
+*/
 	/* The property and field names below must correspond to elements
 	 * in enum power_supply_property. For reasoning, see
 	 * Documentation/power/power_supply_class.rst.
@@ -745,6 +745,7 @@ int power_supply_get_battery_info(struct power_supply *psy,
 		resist_table[index].resistance = be32_to_cpu(*list++);
 	}
 
+	printk("BAT_DEBUG : %s, %s, %d : success",__FILE__, __func__, __LINE__);
 out_put_node:
 	of_node_put(battery_np);
 	return err;
-- 
2.25.1

